[{"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\index.js":"1","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\App.js":"2","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\layouts\\Landing.js":"4","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\layouts\\Navbar.js":"5","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\auth\\Register.js":"6","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\store.js":"8","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\reducers\\index.js":"9","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\reducers\\alert.js":"10","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\actions\\types.js":"11","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\actions\\alert.js":"12","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\layouts\\Alert.js":"13","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\actions\\auth.js":"14","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\reducers\\auth.js":"15","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\utils\\setAuthToken.js":"16","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\dashboard\\Dashboard.js":"17","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\routing\\PrivateRoute.js":"18","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\reducers\\profile.js":"19","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\actions\\profile.js":"20","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\layouts\\Spinner.js":"21","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\dashboard\\DashboardActions.js":"23","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile-forms\\EditProfile.js":"24","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile-forms\\AddExperience.js":"25","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile-forms\\AddEducation.js":"26","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\dashboard\\Experience.js":"27","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\dashboard\\Education.js":"28","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profiles\\Profiles.js":"29","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profiles\\ProfileItem.js":"30","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile\\Profile.js":"31","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile\\ProfileTop.js":"32","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile\\ProfileAbout.js":"33","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile\\ProfileExperience.js":"34","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile\\ProfileEducation.js":"35","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile\\ProfileGithub.js":"36","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\reducers\\post.js":"37","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\posts\\Posts.js":"38","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\actions\\post.js":"39","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\posts\\PostItem.js":"40","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\posts\\PostForm.js":"41","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\post\\Post.js":"42","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\post\\CommentForm.js":"43","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\post\\CommentItem.js":"44"},{"size":430,"mtime":1611945924256,"results":"45","hashOfConfig":"46"},{"size":2501,"mtime":1612565976359,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"46"},{"size":1207,"mtime":1612291824106,"results":"49","hashOfConfig":"46"},{"size":1485,"mtime":1612485528548,"results":"50","hashOfConfig":"46"},{"size":3864,"mtime":1612483546267,"results":"51","hashOfConfig":"46"},{"size":2350,"mtime":1612130617705,"results":"52","hashOfConfig":"46"},{"size":405,"mtime":1612034039890,"results":"53","hashOfConfig":"46"},{"size":248,"mtime":1612484547703,"results":"54","hashOfConfig":"46"},{"size":433,"mtime":1612041706850,"results":"55","hashOfConfig":"46"},{"size":1096,"mtime":1612567512931,"results":"56","hashOfConfig":"46"},{"size":531,"mtime":1612125687826,"results":"57","hashOfConfig":"46"},{"size":524,"mtime":1612040950470,"results":"58","hashOfConfig":"46"},{"size":2303,"mtime":1612483493739,"results":"59","hashOfConfig":"46"},{"size":1330,"mtime":1612381754860,"results":"60","hashOfConfig":"46"},{"size":261,"mtime":1612127496105,"results":"61","hashOfConfig":"46"},{"size":2242,"mtime":1612397593003,"results":"62","hashOfConfig":"46"},{"size":720,"mtime":1612288906010,"results":"63","hashOfConfig":"46"},{"size":1331,"mtime":1612464408135,"results":"64","hashOfConfig":"46"},{"size":6532,"mtime":1612465277250,"results":"65","hashOfConfig":"46"},{"size":297,"mtime":1612292488212,"results":"66","hashOfConfig":"46"},{"size":6238,"mtime":1612323822618,"results":"67","hashOfConfig":"46"},{"size":722,"mtime":1612478525763,"results":"68","hashOfConfig":"46"},{"size":7630,"mtime":1612397593003,"results":"69","hashOfConfig":"46"},{"size":3005,"mtime":1612397610875,"results":"70","hashOfConfig":"46"},{"size":3023,"mtime":1612397593003,"results":"71","hashOfConfig":"46"},{"size":1590,"mtime":1612381953535,"results":"72","hashOfConfig":"46"},{"size":1577,"mtime":1612382098259,"results":"73","hashOfConfig":"46"},{"size":1298,"mtime":1612397593003,"results":"74","hashOfConfig":"46"},{"size":1158,"mtime":1612396876029,"results":"75","hashOfConfig":"46"},{"size":3638,"mtime":1612466554077,"results":"76","hashOfConfig":"46"},{"size":2271,"mtime":1612406381871,"results":"77","hashOfConfig":"46"},{"size":942,"mtime":1612406450398,"results":"78","hashOfConfig":"46"},{"size":667,"mtime":1612402815839,"results":"79","hashOfConfig":"46"},{"size":741,"mtime":1612403265424,"results":"80","hashOfConfig":"46"},{"size":1807,"mtime":1612481830734,"results":"81","hashOfConfig":"46"},{"size":2012,"mtime":1612568556109,"results":"82","hashOfConfig":"46"},{"size":1176,"mtime":1612552113742,"results":"83","hashOfConfig":"46"},{"size":4371,"mtime":1612567512931,"results":"84","hashOfConfig":"46"},{"size":2683,"mtime":1612566624963,"results":"85","hashOfConfig":"46"},{"size":1155,"mtime":1612567828844,"results":"86","hashOfConfig":"46"},{"size":1303,"mtime":1612569513186,"results":"87","hashOfConfig":"46"},{"size":1195,"mtime":1612567828844,"results":"88","hashOfConfig":"46"},{"size":1670,"mtime":1612569830960,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"ykhy6x",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"92"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\index.js",[],["188","189"],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\App.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\layouts\\Landing.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\layouts\\Navbar.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\store.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\reducers\\index.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\reducers\\alert.js",["190","191","192"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [\r\n    \r\n];\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case 'SET_ALERT':\r\n            return [...state, payload];\r\n        case 'REMOVE_ALERT':\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\actions\\types.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\actions\\alert.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\layouts\\Alert.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\actions\\auth.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\reducers\\auth.js",["193"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n    \r\n    switch(type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state, \r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state, \r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\dashboard\\Dashboard.js",["194"],"import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layouts/Spinner';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { deleteAccount, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst Dashboard = ({ \r\n    getCurrentProfile, \r\n    deleteAccount,\r\n    auth: { user }, \r\n    profile: {profile, loading } \r\n}) => {\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    }, [])\r\n    return loading && profile === null ? <Spinner /> : <Fragment>\r\n        <h1 className=\"large text-primary\">Dashboard</h1>\r\n        <p className=\"lead\">\r\n            <i className=\"fas fa-user\"></i>Welcome { user && user.name }\r\n        </p>\r\n        {profile !== null ? \r\n            (   // Has Profile\r\n                <Fragment>\r\n                    <DashboardActions />\r\n                    <Experience experience={profile.experience}/>\r\n                    <Education education={profile.education}/>\r\n                    \r\n                    <div className=\"my-2\">\r\n                        <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n                            <i className=\"fas fa-user-minus\"></i>  Delete My Account\r\n                        </button>\r\n                    </div>\r\n                </Fragment>\r\n            ) : (   // Does not have profile\r\n                <Fragment><p>You have not set up your profile! Please add some info!</p>\r\n                    <Link to='/create-profile' className='btn btn-primary my-1'>\r\n                        Create Profile\r\n                    </Link>\r\n                </Fragment>\r\n            )\r\n        }\r\n    </Fragment>\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\r\n","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\reducers\\profile.js",["195"],"import { \r\n    GET_PROFILE, \r\n    PROFILE_ERROR, \r\n    CLEAR_PROFILE, \r\n    UPDATE_PROFILE, \r\n    GET_PROFILES,\r\n    GET_REPOS\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            };\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            };\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n                profile: null\r\n            };\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            };\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\actions\\profile.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\layouts\\Spinner.js",["196"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default() => (\r\n    <Fragment>\r\n        <img\r\n            src={spinner}\r\n            style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n            alt='Loading...'\r\n        />\r\n    </Fragment>\r\n);","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile-forms\\CreateProfile.js",["197"],"import React, { Fragment, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        companmy: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: ''\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            \r\n      <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername} \r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && <Fragment>\r\n            <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-twitter fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-facebook fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-youtube fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)}/>\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-instagram fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\r\n            </div>\r\n        </Fragment>}\r\n\r\n        \r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n      </form>\r\n    \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile-forms\\EditProfile.js",["198"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({ \r\n    profile: { profile, loading }, \r\n    createProfile, \r\n    getCurrentProfile, \r\n    history \r\n}) => {\r\n    const [formData, setFormData] = useState({\r\n        companmy: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: ''\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram\r\n        });\r\n    }, [loading]);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData, history, true)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            \r\n      <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)} />\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername} \r\n            onChange={e => onChange(e)}\r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && <Fragment>\r\n            <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-twitter fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-facebook fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-youtube fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)}/>\r\n            </div>\r\n\r\n            <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-instagram fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\r\n            </div>\r\n        </Fragment>}\r\n\r\n        \r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n    \r\n        </Fragment>\r\n    );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    { createProfile, getCurrentProfile }\r\n)(withRouter(EditProfile));\r\n","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile-forms\\AddExperience.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile-forms\\AddEducation.js",["199","200"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const { school, degree, fieldofstudy, from, to, current, description } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    \r\n    return (\r\n        <Fragment>\r\n            <h1 class=\"large text-primary\">\r\n       Add Your Education\r\n      </h1>\r\n      <p class=\"lead\">\r\n        <i class=\"fas fa-code-branch\"></i> Add any school or bootcamp that you have atteneded.\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form class=\"form\" onSubmit={e => {\r\n        e.preventDefault();\r\n        addEducation(formData, history);\r\n      }}>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* School or Bootcamp\" name=\"school\" value={school} onChange={e => onChange(e)} required />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Degree or Certificate\" name=\"degree\" value={degree} onChange={e => onChange(e)} required />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Field of Study\" name=\"fieldofstudy\" value={fieldofstudy} onChange={e => onChange(e)} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={e => onChange(e)} />\r\n        </div>\r\n         <div class=\"form-group\">\r\n          <p><input type=\"checkbox\" name=\"current\" checked={current} value={current} onChange={e => {\r\n            setFormData({ ...formData, current: !current });\r\n            toggleDisabled(!toDateDisabled);\r\n          }} /> {' '}Current School</p>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input type=\"date\" name=\"to\" value={to} onChange={e => onChange(e)} disabled={toDateDisabled ? 'disabled' : ''}/>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Program Description\"\r\n            value={description} \r\n            onChange={e => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type=\"submit\" class=\"btn btn-primary my-1\" />\r\n        <a class=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\r\n      </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addEducation })(AddEducation);","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\dashboard\\Experience.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\dashboard\\Education.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profiles\\Profiles.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profiles\\ProfileItem.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile\\Profile.js",["201","202"],"import React, { Fragment, Fragments, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layouts/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience'\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport auth from '../../reducers/auth';\r\n\r\nconst Profile = ({ \r\n    getProfileById, \r\n    profile: { profile, loading },\r\n    auth,  \r\n    match \r\n}) => {\r\n    useEffect(() => {\r\n        getProfileById(match.params.id);\r\n    }, [getProfileById, match.params.id]);\r\n\r\n     \r\n    return (\r\n        <Fragment>\r\n            {profile === null || loading ? (\r\n                <Spinner/>\r\n            ) : (\r\n                <Fragment>\r\n                    <Link to='/profiles' className='btn btn-light'>\r\n                        Back To Profiles    \r\n                    </Link>\r\n                    {auth.isAuthenticated && \r\n                        auth.loading === false && \r\n                        auth.user._id === profile.user._id && (\r\n                            <Link to='/edit-profile' className='btn btn-dark'>\r\n                                Edit Profile\r\n                            </Link>\r\n                        )}\r\n                    <div className=\"profile-grid my-1\">\r\n                        <ProfileTop profile={profile}/>\r\n                        <ProfileAbout profile={profile}/>\r\n                        <div className=\"profile-exp bg-white p-2\">\r\n                            <h2 className=\"text-primary\">Experience</h2>\r\n                            {profile.experience.length > 0 ? (\r\n                                <Fragment>\r\n                                    {profile.experience.map(experience => (\r\n                                        <ProfileExperience key={experience._id} experience={experience}/>\r\n                                    ))}\r\n                                </Fragment>\r\n                            ) : (\r\n                                <h4>No experience credentials</h4>\r\n                            )\r\n                            }\r\n                        </div>\r\n                        <div className=\"profile-edu bg-white p-2\">\r\n                            <h2 className=\"text-primary\">Education</h2>\r\n                            {profile.education.length > 0 ? (\r\n                                <Fragment>\r\n                                    {profile.education.map(education => (\r\n                                        <ProfileEducation key={education._id} education={education}/>\r\n                                    ))}\r\n                                </Fragment>\r\n                            ) : (\r\n                                <h4>No education credentials</h4>\r\n                            )\r\n                            }\r\n                        </div>\r\n                        {profile.githubusername && (\r\n                            <ProfileGithub username={profile.githubusername}/>\r\n                        )}\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile\\ProfileTop.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile\\ProfileAbout.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile\\ProfileExperience.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile\\ProfileEducation.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\profile\\ProfileGithub.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\reducers\\post.js",["203"],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\posts\\Posts.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\actions\\post.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\posts\\PostItem.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\posts\\PostForm.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\post\\Post.js",["204"],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\post\\CommentForm.js",[],"C:\\Users\\Skyler\\Documents\\dev\\devConnector\\client\\src\\components\\post\\CommentItem.js",["205"],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":1,"column":10,"nodeType":"212","messageId":"213","endLine":1,"endColumn":19},{"ruleId":"210","severity":1,"message":"214","line":1,"column":21,"nodeType":"212","messageId":"213","endLine":1,"endColumn":33},{"ruleId":"215","severity":1,"message":"216","line":7,"column":1,"nodeType":"217","endLine":18,"endColumn":2},{"ruleId":"215","severity":1,"message":"216","line":19,"column":1,"nodeType":"217","endLine":54,"endColumn":2},{"ruleId":"218","severity":1,"message":"219","line":19,"column":8,"nodeType":"220","endLine":19,"endColumn":10,"suggestions":"221"},{"ruleId":"215","severity":1,"message":"216","line":18,"column":1,"nodeType":"217","endLine":58,"endColumn":2},{"ruleId":"215","severity":1,"message":"222","line":4,"column":1,"nodeType":"217","endLine":12,"endColumn":3},{"ruleId":"210","severity":1,"message":"223","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"218","severity":1,"message":"224","line":47,"column":8,"nodeType":"220","endLine":47,"endColumn":17,"suggestions":"225"},{"ruleId":"210","severity":1,"message":"223","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"226","line":2,"column":16,"nodeType":"212","messageId":"213","endLine":2,"endColumn":26},{"ruleId":"210","severity":1,"message":"227","line":1,"column":27,"nodeType":"212","messageId":"213","endLine":1,"endColumn":36},{"ruleId":"210","severity":1,"message":"228","line":12,"column":8,"nodeType":"212","messageId":"213","endLine":12,"endColumn":12},{"ruleId":"215","severity":1,"message":"216","line":19,"column":1,"nodeType":"217","endLine":77,"endColumn":2},{"ruleId":"218","severity":1,"message":"229","line":14,"column":8,"nodeType":"220","endLine":14,"endColumn":17,"suggestions":"230"},{"ruleId":"210","severity":1,"message":"231","line":1,"column":17,"nodeType":"212","messageId":"213","endLine":1,"endColumn":25},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'SET_ALERT' is defined but never used.","Identifier","unusedVar","'REMOVE_ALERT' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["234"],"Assign arrow function to a variable before exporting as module default","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["235"],"'withRouter' is defined but never used.","'Fragments' is defined but never used.","'auth' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["236"],"'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"243","text":"244"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"245","text":"246"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"247","text":"248"},[614,616],"[getCurrentProfile]",[1844,1853],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",[521,530],"[getPost, match.params.id]"]